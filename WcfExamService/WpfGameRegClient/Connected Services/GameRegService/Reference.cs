//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfGameRegClient.GameRegService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfExamService")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gamer", Namespace="http://schemas.datacontract.org/2004/07/WcfExamService")]
    [System.SerializableAttribute()]
    public partial class Gamer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GamerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GamerId {
            get {
                return this.GamerIdField;
            }
            set {
                if ((this.GamerIdField.Equals(value) != true)) {
                    this.GamerIdField = value;
                    this.RaisePropertyChanged("GamerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Passwd {
            get {
                return this.PasswdField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswdField, value) != true)) {
                    this.PasswdField = value;
                    this.RaisePropertyChanged("Passwd");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameRegService.IGameRegistration")]
    public interface IGameRegistration {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameRegistration/GetData", ReplyAction="http://tempuri.org/IGameRegistration/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameRegistration/GetData", ReplyAction="http://tempuri.org/IGameRegistration/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameRegistration/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IGameRegistration/GetDataUsingDataContractResponse")]
        WpfGameRegClient.GameRegService.CompositeType GetDataUsingDataContract(WpfGameRegClient.GameRegService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameRegistration/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IGameRegistration/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<WpfGameRegClient.GameRegService.CompositeType> GetDataUsingDataContractAsync(WpfGameRegClient.GameRegService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameRegistration/TestConnection", ReplyAction="http://tempuri.org/IGameRegistration/TestConnectionResponse")]
        string TestConnection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameRegistration/TestConnection", ReplyAction="http://tempuri.org/IGameRegistration/TestConnectionResponse")]
        System.Threading.Tasks.Task<string> TestConnectionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameRegistration/AddNewGamerToDb", ReplyAction="http://tempuri.org/IGameRegistration/AddNewGamerToDbResponse")]
        int AddNewGamerToDb(WpfGameRegClient.GameRegService.Gamer gam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameRegistration/AddNewGamerToDb", ReplyAction="http://tempuri.org/IGameRegistration/AddNewGamerToDbResponse")]
        System.Threading.Tasks.Task<int> AddNewGamerToDbAsync(WpfGameRegClient.GameRegService.Gamer gam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameRegistration/LoginToReg", ReplyAction="http://tempuri.org/IGameRegistration/LoginToRegResponse")]
        string LoginToReg(string login, string passwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameRegistration/LoginToReg", ReplyAction="http://tempuri.org/IGameRegistration/LoginToRegResponse")]
        System.Threading.Tasks.Task<string> LoginToRegAsync(string login, string passwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameRegistration/AddNewGamerToDbString", ReplyAction="http://tempuri.org/IGameRegistration/AddNewGamerToDbStringResponse")]
        int AddNewGamerToDbString(string nick, string login, string passwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameRegistration/AddNewGamerToDbString", ReplyAction="http://tempuri.org/IGameRegistration/AddNewGamerToDbStringResponse")]
        System.Threading.Tasks.Task<int> AddNewGamerToDbStringAsync(string nick, string login, string passwd);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameRegistrationChannel : WpfGameRegClient.GameRegService.IGameRegistration, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameRegistrationClient : System.ServiceModel.ClientBase<WpfGameRegClient.GameRegService.IGameRegistration>, WpfGameRegClient.GameRegService.IGameRegistration {
        
        public GameRegistrationClient() {
        }
        
        public GameRegistrationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GameRegistrationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GameRegistrationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GameRegistrationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public WpfGameRegClient.GameRegService.CompositeType GetDataUsingDataContract(WpfGameRegClient.GameRegService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<WpfGameRegClient.GameRegService.CompositeType> GetDataUsingDataContractAsync(WpfGameRegClient.GameRegService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public string TestConnection() {
            return base.Channel.TestConnection();
        }
        
        public System.Threading.Tasks.Task<string> TestConnectionAsync() {
            return base.Channel.TestConnectionAsync();
        }
        
        public int AddNewGamerToDb(WpfGameRegClient.GameRegService.Gamer gam) {
            return base.Channel.AddNewGamerToDb(gam);
        }
        
        public System.Threading.Tasks.Task<int> AddNewGamerToDbAsync(WpfGameRegClient.GameRegService.Gamer gam) {
            return base.Channel.AddNewGamerToDbAsync(gam);
        }
        
        public string LoginToReg(string login, string passwd) {
            return base.Channel.LoginToReg(login, passwd);
        }
        
        public System.Threading.Tasks.Task<string> LoginToRegAsync(string login, string passwd) {
            return base.Channel.LoginToRegAsync(login, passwd);
        }
        
        public int AddNewGamerToDbString(string nick, string login, string passwd) {
            return base.Channel.AddNewGamerToDbString(nick, login, passwd);
        }
        
        public System.Threading.Tasks.Task<int> AddNewGamerToDbStringAsync(string nick, string login, string passwd) {
            return base.Channel.AddNewGamerToDbStringAsync(nick, login, passwd);
        }

        
    }
}
